#include <stdio.h>
#include <math.h>

#define EPSILON 0.0001
#define MAX_ITERATIONS 1000
#define f(x) ((x) * (x) * (x) - 8 * (x) - 4)  // Given function

void find_root_ita(double a, double b, int show_table);
int find_all_roots_ita(double a, double b, double step, int show_table);

int main() {
    double a, b, step = 0.1;
    char choice;
    int root_count;
    
    do {
        printf("Enter the range: ");
        scanf("%lf %lf", &a, &b);
        
        printf("Show iteration table? (y/n): ");
        scanf(" %c", &choice);
        int show_table = (choice == 'y' || choice == 'Y');
        
        root_count = find_all_roots_ita(a, b, step, show_table);
        
        if (root_count == 0)
            printf("\nNo roots found in [%.2lf, %.2lf]. Try another range.\n", a, b);
    } while (root_count == 0);
    
    printf("\nTotal roots found: %d\n", root_count);
    return 0;
}

int find_all_roots_ita(double a, double b, double step, int show_table) {
    int count = 0;
    printf("\nSearching for roots in [%.2lf, %.2lf]:\n", a, b);
    
    for (double i = a; i < b - step / 2; i += step) {
        if (f(i) * f(i + step) < 0) {
            printf("\nRoot found in [%.2lf, %.2lf]:\n", i, i + step);
            find_root_ita(i, i + step, show_table);
            count++;
        }
    }
    
    return count;
}

void find_root_ita(double a, double b, int show_table) {
    double c, fc;
    int iteration = 0;

    if (show_table) {
        printf("\nIter\t    a\t\t    b\t\t    c (Mid)\t    f(c)\n");
        printf("---------------------------------------------------------------\n");
    }

    do {
        c = (a + b) / 2;
        fc = f(c);
        iteration++;

        if (show_table)
            printf("%5d\t%12.8lf\t%12.8lf\t%12.8lf\t%12.8lf\n", iteration, a, b, c, fc);

        if (fabs(fc) < EPSILON) // Stopping condition
            break;

        if (f(a) * fc < 0)
            b = c;
        else
            a = c;

    } while ((b - a) / 2 > EPSILON && iteration < MAX_ITERATIONS);

    if (iteration >= MAX_ITERATIONS)
        printf("Warning: Max iterations reached. May not have fully converged.\n");
        
    printf("Root found: %.10lf (f(x) = %.10e)\n", c, f(c));
    printf("Converged in %d iterations\n", iteration);
}
